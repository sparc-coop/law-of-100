@using Microsoft.AspNetCore.Components.Web
@namespace Sparc.Kernel.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <base href="~/" />
    <link href="https://fonts.cdnfonts.com/css/clash-display" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://api.kodekit.io/unclay-bespend.css">
    <link href="_content/LawOf100.UI/css/app.css" rel="stylesheet" />
    <link href="_content/LawOf100.UI/LawOf100.UI.styles.css" rel="stylesheet" />

    <!-- Icons -->
    <link rel="apple-touch-icon" sizes="180x180" href="/icons/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="icons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="icons/favicon-16x16.png">
    <link rel="manifest" href="icons/site.webmanifest.json">
    <link rel="mask-icon" href="icons/safari-pinned-tab.svg" color="#5bbad5">
    <link rel="shortcut icon" href="icons/favicon.ico">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="msapplication-config" content="icons/browserconfig.xml">
    <meta name="theme-color" content="#ffffff">

    <component type="typeof(HeadOutlet)" render-mode="WebAssemblyPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.webassembly.js"></script>
    <script src="_content/Microsoft.Authentication.WebAssembly.Msal/AuthenticationService.js"></script>

    <script>
        window.twttr = (function(d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0],
                t = window.twttr || {};
            if (d.getElementById(id)) return t;
            js = d.createElement(s);
            js.id = id;
            js.src = "https://platform.twitter.com/widgets.js";
            fjs.parentNode.insertBefore(js, fjs);

            t._e = [];
            t.ready = function(f) {
                t._e.push(f);
            };

            return t;
        }(document, "script", "twitter-wjs"));
    </script>

    <!-- Used for the Entry Day Confirmation/Share pop out box -->
    <script>
        getElementRectangle = (element) => { return element.getBoundingClientRect(); };
        isPrerendered = (is) => { 
            if (is)
                document.getElementsByClassName('sparc-app')[0].classList.add('sparc-app-prerendered');
            else 
                document.getElementsByClassName('sparc-app')[0].classList.remove('sparc-app-prerendered');
        };
    </script>

    <script type="module">
        import { initializeApp } from 'https://www.gstatic.com/firebasejs/9.6.10/firebase-app.js'
        import { getMessaging, getToken, onMessage } from 'https://www.gstatic.com/firebasejs/9.6.10/firebase-messaging.js'

        const firebaseConfig = {
            apiKey: "AIzaSyBDqWSzVu3i79VyPqTr4xP0DzTeHMwILtQ",
            authDomain: "law-of-100.firebaseapp.com",
            projectId: "law-of-100",
            storageBucket: "law-of-100.appspot.com",
            messagingSenderId: "602819901577",
            appId: "1:602819901577:web:3192c976719b4947232e58",
            measurementId: "G-MZTDQZE90E"
        };

        const app = initializeApp(firebaseConfig);

        const messaging = getMessaging(app);

        getToken(messaging, { vapidKey: 'BLlx_Ytlf8KtrkgTgVRTLpD5fNTkyYfgy_b3x5vvUEgMdUQavN3woSdbTbuOxbbRA7BKyoTZNCezFZKqsx5m9as' }).then((currentToken) => {
            if (currentToken) {
                localStorage.setItem('sparc-device-pushtoken', currentToken);
            } else {
                // Show permission request UI
                console.log('No registration token available. Request permission to generate one.');
                // ...
            }
        }).catch((err) => {
            console.log('An error occurred while retrieving token. ', err);
            // ...
        });

        onMessage(messaging, (payload) => {
            console.log('Message received. ', payload);
            // ...
        });
    </script>
</body>
</html>
